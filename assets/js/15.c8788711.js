(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{479:function(a,t,e){"use strict";e.r(t);var s=e(20),r=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h4",{attrs:{id:"_1-设置全局邮箱和姓名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-设置全局邮箱和姓名"}},[a._v("#")]),a._v(" 1. 设置全局邮箱和姓名")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('git config --global user.email "you@example.com"\ngit config --global user.name "Your Name"\n')])])]),e("h4",{attrs:{id:"_2-在现有目录中初始化仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-在现有目录中初始化仓库"}},[a._v("#")]),a._v(" 2.在现有目录中初始化仓库")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git init\n")])])]),e("h4",{attrs:{id:"_3-跟踪文件并提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-跟踪文件并提交"}},[a._v("#")]),a._v(" 3.跟踪文件并提交")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('git add . （添加项目目录下所有文件至暂存，会变成暂存状态）\ngit add <file> （添加指定文件到暂存，会变成暂存状态）\ngit commit -m "提交内容备注"\n')])])]),e("h4",{attrs:{id:"_4-克隆现有仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-克隆现有仓库"}},[a._v("#")]),a._v(" 4.克隆现有仓库")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git clone https://github.com/demo\ngit clone https://github.com/demo mydemo (克隆并命名)\ngit clone -b branchName  https://github.com/demo # 克隆指定分支\n")])])]),e("h4",{attrs:{id:"_5-检查当前文件状态"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-检查当前文件状态"}},[a._v("#")]),a._v(" 5.检查当前文件状态")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git status\n")])])]),e("h4",{attrs:{id:"_6-查看已暂存和未暂存的修改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-查看已暂存和未暂存的修改"}},[a._v("#")]),a._v(" 6.查看已暂存和未暂存的修改")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("① git diff (未暂存)\n② git diff --cached （已暂存）\n③ git diff --staged （已暂存）\n说明：②和③效果相同，但③在Git1.6.1及更高版本才能使用\n")])])]),e("h4",{attrs:{id:"_7-跳过使用暂存区域-a选项可以跳过git-add操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-跳过使用暂存区域-a选项可以跳过git-add操作"}},[a._v("#")]),a._v(" 7.跳过使用暂存区域, -a选项可以跳过git add操作")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git commit -a\n")])])]),e("h4",{attrs:{id:"_8-移除文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-移除文件"}},[a._v("#")]),a._v(" 8.移除文件")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git rm <file> (移除跟踪，并删除本地磁盘上的文件)\ngit rm -f <file> （如果删除之前修改过并且已经放到暂存区域的话，可以使用-f选项强制删除）\ngit rm --cached <file> （仅仅移除跟踪，保留本地磁盘上的文件）(常用)\n")])])]),e("h4",{attrs:{id:"_9-移动文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_9-移动文件"}},[a._v("#")]),a._v(" 9.移动文件")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git mv <file_from> <file_to>\n")])])]),e("h4",{attrs:{id:"_10-在本地仓库添加一个远程仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_10-在本地仓库添加一个远程仓库"}},[a._v("#")]),a._v(" 10.在本地仓库添加一个远程仓库")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git remote add origin https://gitee.com/itoak/git_practice.git\n说明：origin为远程仓库名称，可以自定义其他名字\n\n关于远程其他命令：\ngit remote (查看本地已经配置的远程仓库)\ngit remote (查看本地已经配置的远程仓库，并显示URL)\ngit remote show [remote-name] (查看远程仓库详细信息)\ngit remote rename origin itoak (重命名远程仓库)\ngit remote rm itoak (删除本地已配置的远程仓库)\n")])])]),e("h4",{attrs:{id:"_11-将当前分支推到远程分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_11-将当前分支推到远程分支"}},[a._v("#")]),a._v(" 11.将当前分支推到远程分支")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git push origin master (将当前分支推送到远程master分支)\ngit push -f origin master (将当前分支强制推送到远程master分支，用于覆盖远程master分支，谨慎操作)\n")])])]),e("h4",{attrs:{id:"_12-设置远程分支与本地分支的跟踪"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-设置远程分支与本地分支的跟踪"}},[a._v("#")]),a._v(" 12.设置远程分支与本地分支的跟踪")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("设置理由：为啥要设置本地分支跟踪远程分支，如果没有设置本地分支跟踪指定远程分支，那么每次执行\ngit pull或者git push的时候就需要指定远程分支，比较麻烦。在设置跟踪远程分支后，就可以直接使用\ngit pull 和git push操作。\n设置方式：\ngit branch --set-upstream-to=origin/master master (设置本地master分支跟踪远程master分支)\n或者\ngit branch -u origin/master (设置当前本地分支跟踪远程master分支)\n")])])]),e("h4",{attrs:{id:"_13-查看提交历史-详细参数未列出"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_13-查看提交历史-详细参数未列出"}},[a._v("#")]),a._v(" 13.查看提交历史(详细参数未列出)")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git log\n\n查看最后一次提交：git log -1 HEAD\n")])])]),e("h4",{attrs:{id:"_14-关于撤销的几个命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_14-关于撤销的几个命令"}},[a._v("#")]),a._v(" 14.关于撤销的几个命令")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git commit --amend\n说明：这个命令会将暂存区域中的文件提交。如果自上次提交以来你还未做任何修改，\n（例如，在上次提交后马上执行了此命令），那么快照会保持不变，而你所修改的只是提交信息。\n\ngit reset HEAD <file> \n说明：取消指定文件的暂存（即撤销git add操作）\n\ngit checkout -- <file>\n说明：(该命令对未暂存的文件有效)撤销对文件的修改，将它还原成上次提交时的样子，谨慎使用\n\ngit commit之后，还没有push，想撤销commit的解决方案：\ngit reset --soft HEAD^（等同于git reset --soft HEAD~1）\n如果进行了2次commit，想都撤回，可以使用：\ngit reset --soft HEAD~2\n\ngit reset的参数扩展阅读：\n--mixed \n意思是：不删除工作空间改动代码，撤销commit，并且撤销git add . 操作\n这个为默认参数,git reset --mixed HEAD^ 和 git reset HEAD^ 效果是一样的。\n--soft  \n不删除工作空间改动代码，撤销commit，不撤销git add . \n--hard\n删除工作空间改动代码，撤销commit，撤销git add . \n注意完成这个操作后，就恢复到了上一次的commit状态。\n")])])]),e("h4",{attrs:{id:"_15-关于分支命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_15-关于分支命令"}},[a._v("#")]),a._v(" 15.关于分支命令")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git branch (列出所有本地分支)\ngit branch -r (列出所有远程分支, 类似 git ls-remote [remote-name])\ngit branch -a (列出所有本地分支和远程分支)\ngit branch [target-branch-name] [source-branch-name] \n(基于[source-branch-name]创建新的分支[target-branch-name], 若省略[source-branch-name], 则默认基于当前分支创建)\n\ngit branch -d [branch-name] (删除指定分支，删除分支时，指定分支不能为当前分支；如果替换为 -D，则表示强制删除)\ngit branch --merged (列出所有已经合并到当前分支的分支)\ngit branch --no-merged (列出所有未合并到当前分支的分支)\ngit branch -vv (查看本地分支详细信息，如：跟踪信息)\n\ngit checkout -b [target-branch-name] [source-branch-name]\n说明：创建一个新分支，并切换至新分支\nsource-branch-name 可以省略，则默认从当前分支检出新分支，\n若指定source-branch-name，则从指定分支检出新分支，source-branch-name可以是本地分支，可以是远程分支。\n当指定source-branch-name为远程分支时，效果类似：\ngit checkout --track [remote-name]\n")])])]),e("h4",{attrs:{id:"_16-从远程仓库中抓取与拉取"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_16-从远程仓库中抓取与拉取"}},[a._v("#")]),a._v(" 16.从远程仓库中抓取与拉取")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git fetch [remote-name]\n")])])]),e("h4",{attrs:{id:"_17-合并分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_17-合并分支"}},[a._v("#")]),a._v(" 17.合并分支")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git merge [branch-name] (将[branch-name]分支上的内容合并到当前分支)\n")])])]),e("h4",{attrs:{id:"_18-删除远程分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_18-删除远程分支"}},[a._v("#")]),a._v(" 18.删除远程分支")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git push origin --delete develop (删除远程develop分支)\n")])])]),e("h4",{attrs:{id:"_19-fatal-refusing-to-merge-unrelated-histories"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_19-fatal-refusing-to-merge-unrelated-histories"}},[a._v("#")]),a._v(" 19.fatal: refusing to merge unrelated histories")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git pull --allow-unrelated-histories\n")])])]),e("blockquote",[e("p",[a._v("该操作是合并两个没有关联的版本，执行此操作前需明确执行结果！")])]),a._v(" "),e("h4",{attrs:{id:"_20-git-bash下查看状态无法显示中文文件名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_20-git-bash下查看状态无法显示中文文件名"}},[a._v("#")]),a._v(" 20. git bash下查看状态无法显示中文文件名")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git config --global core.quotepath false\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);